# Project Input
SOURCE_EXTENSIONS	:= .cpp
SOURCE_DIRECTORY	:= 

# Project Output
TARGET_NAME			  := raytracer
TARGET_EXTENSION	:= 
OUTPUT_DIRECTORY	:= Release/
BUILD_DIRECTORY		:= build/

# Project Dependencies
INCLUDE_DIRECTORIES	:= include/
LIBRARY_DIRECTORIES	:= include/ glut/
LIBRARIES			:= GL GLU glut

# Compiler
CC			:= g++

# Additional Compiler Flags
CFLAGS		+= -std=c++11
CPPFLAGS	+= -fopenmp
LDFLAGS		+=

# Adds Project Dependencies to Compiler Options
CPPFLAGS	+= $(foreach DIR,$(INCLUDE_DIRECTORIES),-I $(DIR))
LDFLAGS		+= $(foreach DIR,$(LIBRARY_DIRECTORIES),-L $(DIR))
LDFLAGS		+= $(foreach LIB,$(LIBRARIES),-l $(LIB))

# Generates Target
TARGET		:= $(OUTPUT_DIRECTORY)$(TARGET_NAME)$(TARGET_EXTENSION)

# Macros
rwildcard	= $(wildcard $1$2) $(foreach DIR,$(wildcard $1*),$(call rwildcard,$(DIR)/,$2))
reverse		= $(if $1,$(call reverse,$(wordlist 2,$(words $1),$1))) $(firstword $1)
cleandir 	= $(shell ! test -d $1 || rmdir --ignore-fail-on-non-empty $1)

# Files
define FIND_FILES
$(eval TEMP_FILES	:= $$(call rwildcard,$(SOURCE_DIRECTORY),*$1))
SOURCE_FILES		+= $$(TEMP_FILES)
OBJECT_FILES		+= $$(patsubst $(SOURCE_DIRECTORY)%$1,$(BUILD_DIRECTORY)%.o,$$(TEMP_FILES))
DEPENDENCY_FILES	+= $$(patsubst $(SOURCE_DIRECTORY)%$1,$(BUILD_DIRECTORY)%.d,$$(TEMP_FILES))
endef

$(foreach EXT, $(SOURCE_EXTENSIONS), $(eval $(call FIND_FILES,$(EXT))))

BUILD_DIRECTORIES	:= $(sort $(foreach FILE,$(OBJECT_FILES),$(dir $(FILE))))
BUILD_DIRECTORIES	:= $(filter-out ./,$(BUILD_DIRECTORIES))
BUILD_DIRECTORIES	:= $(call reverse,$(BUILD_DIRECTORIES))

# Include Dependency Files
-include DEPENDENCY_FILES 

# Default rule
all: build

# Build the target
build: | dirs $(OBJECT_FILES)
	$(CC) $(CPPFLAGS) $(CFLAGS) -o $(TARGET) $(OBJECT_FILES) $(LDFLAGS) 

# Clean and then build the target
rebuild: | clean build

# Build and then run the target
run: build
	@$(OUTPUT_DIRECTORY)./$(TARGET_NAME)$(TARGET_EXTENSION)

# Removes all files generated by this makefile
clean:
	@rm -f $(TARGET) $(OBJECT_FILES) $(DEPENDENCY_FILES)

# Removes all files and folders generated by this makefile
distclean: clean
	@$(call cleandir,$(OUTPUT_DIRECTORY))
	@$(foreach DIR, $(BUILD_DIRECTORIES),$(call cleandir,$(DIR)))

# Rule for creating the required directories
dirs:
	@mkdir -p $(OUTPUT_DIRECTORY) $(BUILD_DIRECTORIES)

define RULES
$(BUILD_DIRECTORY)%.o: $(SOURCE_DIRECTORY)%$1
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $$@ $$<
	@$(CC) $(CPPFLAGS) $(CFLAGS) -MM -MP $$< | \
	 sed -e '0,/.*:/{s|.*:|$@:|}' > $(BUILD_DIRECTORY)$$*.d
endef

# Rule for generating the object and dependency files
$(foreach EXT, $(SOURCE_EXTENSIONS), $(eval $(call RULES,$(EXT))))

.PHONY: all run build rebuild clean distclean